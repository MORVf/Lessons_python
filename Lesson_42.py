'''
Дан файл с таблицей в формате TSV с информацией о росте школьников разных классов.
Напишите программу, которая прочитает этот файл и подсчитает для каждого класса средний рост учащегося.
Файл состоит из набора строк, каждая из которых представляет собой три поля:
Класс Фамилия Рост

Класс обозначается только числом. Буквенные модификаторы не используются. Номер класса может быть от 1 до 11 включительно. 
В фамилии нет пробелов, а в качестве роста используется натуральное число, но при подсчёте среднего требуется вычислить 
значение в виде вещественного числа.
Выводить информацию о среднем росте следует в порядке возрастания номера класса (для классов с первого по одиннадцатый). 
Если про какой-то класс нет информации, необходимо вывести напротив него прочерк.

Sample Input:
6	Вяххи	159
11	Федотов	172
7	Бондарев	158
6	Чайкина	153

Sample Output:
1 -
2 -
3 -
4 -
5 -
6 156.0
7 158.0
8 -
9 -
10 -
11 172.0
'''

import os #импортируем модуль

file_in = os.path.join('C:\\', 'Documents', 'in.txt')   #формируем путь для входного файла
file_out = os.path.join('C:\\', 'Documents', 'out.txt')  #формируем путь для выходного файла

dict_classes = {}   #словарь для хранения роста по классам

with open(file_in, 'r') as f_in:   #открываем входной файл на чтение
    for line in f_in:    #пробегаем все строки
        line = line.strip().split('\t')   #разбиваем строки на слова
        if int(line[0]) in dict_classes.keys():   #если номер класса уже есть в словаре, то
            dict_classes[int(line[0])] += [int(line[2])] #добавляем ещё один рост в класс
        else:  #иначе
            dict_classes[int(line[0])] = [int(line[2])]   #добавляем новый класс и рост

with open(file_out, 'w') as f_out:   #открываем/создаём выходной файл на запись
    for room in range(1, 12):   #пробегаем все классы от 1 до 11
        f_out.write(str(room))  #пишем номер класса
        f_out.write(' ')   #отступ
        if room not in dict_classes.keys(): #если такого класса нет в словаре, то
            f_out.write('-\n')  #пишем прочерк и переходим на след. строку
        else:  #если класс есть в словаре, то
            for key, values in dict_classes.items():  #проверяем словарь
                if room == key:   #для выбранного класса
                    summa_values = 0   #счетчик суммы роста
                    for value in dict_classes[key]:  #пробегаем все его значения роста
                        summa_values += value   #суммируем все значения
                    f_out.write(str(summa_values / len(dict_classes[key])))  #пишем среднее арифметическое по всем ростам класса
                    f_out.write('\n')   #переходим на новую строку
