'''
Напишите программу, которая считывает текст из файла (в файле может быть больше одной строки) и выводит самое 
частое слово в этом тексте и через пробел то, сколько раз оно встретилось. Если таких слов несколько, вывести 
лексикографически первое (можно использовать оператор < для строк).
В качестве ответа укажите вывод программы, а не саму программу.
Слова, написанные в разных регистрах, считаются одинаковыми.

Sample Input:
abc a bCd bC AbC BC BCD bcd ABC

Sample Output:
abc 3
'''

import os  #импортируем модуль

file_in = os.path.join('C:\\', 'Documents', 'dataset_3363_3.txt') #формируем путь до входного файла

strings_in_file = '' #инициализация строки, конкатенирующей все строки из файла
with open(file_in, 'r') as f_in:  #открываем входной файл на чтение
    for line in f_in:             #считываем каждую строку файла
        line = line.strip().lower()  #у каждой строки файла убираем лишние символы и переводим в нижний регистр
        strings_in_file += line   #добавляем строку из файла в общую строку
        strings_in_file += ' '    #разделяем пробелом каждую строку из файла при конкатенации

sub_string = '' #инициализация строки, в которую будем с помощью конкатенации собирать конкретную подстроку
list_with_sub_strings = [] #инициализация списка, куда будем записывать отдельные подстроки из общей строки

for j in range(len(strings_in_file)): #пробегаем каждый символ в строке
    if strings_in_file[j] != ' ': #если символ не является пробелом, то
        sub_string += strings_in_file[j]   #начинаем собирать подстроку
        if j == len(strings_in_file) - 1:  #если символ последний в строке, то
            list_with_sub_strings += [sub_string]  #добавляем получившуюся подстроку в список
    else: #если символ является пробелом
        list_with_sub_strings += [sub_string]  #добавляем получившуюся подстроку в список
        sub_string = ''   #обнуляем строку для сборки следующей подстроки

max_count = 0   #инициализация счетчика количества повторения подстроки
string_with_max_count = ''      #инициализации строки с максимальным количеством повторений в списке
for k in list_with_sub_strings:   #пробегаем каждый элемент списка
    if list_with_sub_strings.count(k) > max_count:   #если строка повторяется чаще, то
        string_with_max_count = k    #сохраняем строку
        max_count = list_with_sub_strings.count(k)   #сохраняем её количество повторений
    elif list_with_sub_strings.count(k) == max_count:  #если количество повторений равно, то
        if k < string_with_max_count:    # сравниваем строки лексикографически
            string_with_max_count = k    # и берём первое из них

print(string_with_max_count, list_with_sub_strings.count(string_with_max_count))   #выводим строку и её количество повторений в списке
